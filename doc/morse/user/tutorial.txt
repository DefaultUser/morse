====== Tutorial example ======

This tutorial assumes MORSE is properly installed. If not, follow the instructions [[installation | here]].

===== Setup of the simulation scene =====

==== Load sample file ====

Open the MORSE simulator with the test file provided with the installation, by using this command:

  $ morse $ORS_ROOT/share/examples/morse/scenarii/tutorial-1.blend

This will load a scene with a robot in a room with some furniture.

==== Link an actuator ====

We'll add a motion controller to the robot, so that it can receive commands from an external program. The robot will then move according to the instructions received. In this case we'll add a controller that uses linear and angular speed (V, W).

  - With the mouse over the 3D view in Blender, press <key>S-F1</key> to open the Load Library browser
  - Navigate to the directory ''$ORS_ROOT/data/morse/components/controllers''
  - Press :LMB: over the file ''morse_vw_control.blend''
  - Press :LMB: over the item ''Object''
  - Toggle the buttons **Relative Paths** and **Link** at the bottom of the window
  - Press :RMB: over the item ''Motion_Controller''
  - Press the button **Load Library**. You'll return to the 3D View
  - Select the newly inserted object in the scene, either by :RMB: clicking over the object in the 3D View, or :LMB: over the object's name in the Outliner window. The object will be highlighted in cyan color, and can not be moved around.
  - Convert the object to local, by pressing <key>l</key> then hitting <key>enter</key>
  - With the controller selected, hold down <key>S</key> and then :RMB: over the robot object
  - Press <key>C-p</key> and then hit <key>enter</key> make the robot the parent of the controller

==== Link a Gyroscope sensor ====

Next we'll add a sensor to the robot that will report the angles of the robot orientation with respect to the reference axes (yaw, pitch and roll)

  - With the mouse over the 3D view in Blender, press <key>S-F1</key> to open the Load Library browser
  - Navigate to the directory ''$ORS_ROOT/data/morse/components/sensors''
  - Press :LMB: over the file ''morse_gyroscope.blend''
  - Press :LMB: over the item ''Object''
  - Toggle the buttons **Relative Paths** and **Link** at the bottom of the window
  - Press :RMB: over the items ''Gyroscope'' and ''Gyro_box''
  - Press the button **Load Library**. You'll return to the 3D View
  - Select the newly inserted ''Gyroscope'' object in the scene, either by :RMB: clicking over the object in the 3D View, or :LMB: over the object's name in the Outliner window. The object will be highlighted in cyan color, and can not be moved around.
  - Select the child object, by pressing <key>S-g</key>, then hitting <key>enter</key>
  - Convert the object to local, by pressing <key>l</key> then hitting <key>enter</key>
  - Switch to front view by pressing <key>'1 NumPad'</key>
  - Press <key>g</key>, then move the ''Gyroscope'' object to the correct location with respect to the robot
  - Press :LMB: to accept the movement
  - With the ''Gyroscope'' object selected, hold down <key>S</key> and then :RMB: over the robot object
  - Press <key>C-p</key> and then hit <key>enter</key> make the robot the parent of the controller

==== Insert the middleware object ====
To use a middleware to exchange data from the simulator, it is necessary to link in an object that will represent the middleware.

  - With the mouse over the 3D view in Blender, press <key>S-F1</key> to open the Load Library browser
  - Navigate to the directory ''$ORS_ROOT/data/morse/components/middleware''
  - Press :LMB: over the file ''socket_empty.blend''
  - Press :LMB: over the item ''Object''
  - Toggle the buttons **Relative Paths** and **Link** at the bottom of the window
  - Press :RMB: over the item ''Socket_Empty''
  - Press the button **Load Library**. You'll return to the 3D View
  - It is not necessary to make this object local or to move it. But it can be useful to avoid cluttering of items in the scene

__Note__: One single middleware Empty is necessary to enable the middleware, regardless of how many components will make use of it.

==== Configuring the middlewares ====
Binding the components in the scene with the middleware is done in a configuration file within the Blender file.

  - On the **Text Editor** window, select the file ''component_config.py''
  - Add the following items to the ''component_mw'' dictionary:

<code python>
component_mw = {
    "Gyroscope": ["Socket", "post_message"],
    "Motion_Controller": ["Socket", "read_message"],
	}
</code>

==== Run the simulation ====
Press <key>p</key> to start the Game Engine

==== Connect with the client ====
Use the example client program to test the bindings in the simulation

  - On a separate terminal, navigate to the directory ''$ORS_ROOT/share/examples/morse/clients/atrv/''
  - Execute the command
    $ python socket_v_omega_client.py
  - Press <key>a</key> to give speed commands to the robot
  - Type a the linear and angular speeds, followed by <key>enter</key> after each
  - The robot should start moving in MORSE
  - Press <key>b</key> to print the readings of the gyroscope exported by MORSE
  - Press <key>q</key> to exit the client

Finally exit the simulation, by pressing <key>esc</key> on the Blender window, then close Blender by pressing <key>C-q</key>, then <key>enter</key>.
